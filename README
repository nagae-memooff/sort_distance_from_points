在命令行执行 `./generate_random_points.rb 300 > points && javac SortDistance.java && java -classpath . SortDistance > result`，打开result文件查看运行结果。

说明：
1、执行 `./generate_random_points.rb 300 > points` 生成300个随机点（横纵坐标均为0到200）并重定向到points文件中，程序从此文件中读取并解析点坐标
2、编译SortDistance.java类。
3、执行SortDistance，冒泡排序和快速排序的排序结果将会先后输出到标准输出，而两者执行消耗时间会先后输出到标准错误。由于记录过多，推荐利用重定向将结果输出到文件中，终端中只输出执行时间。
4、当记录数大于300时，重定向到文件会导致连续IO写入，会增大等待时间（不影响命令行中输出的执行时间）。可以在内存里（/dev/shm）运行程序，或者重定向到/dev/null中。
5、经测试，冒泡排序在300条记录以上就会明显变慢，快速排序在2000左右记录时才会变慢。符合两者的时间复杂度区别。
